# name: Exploring Variable and Secrets

# on: push

# jobs: 
#     docker:
#         runs-on: ubuntu-latest
#         steps:
#         - name: Docker Build
#           run: docker build -t docker.io/dockerUsername/imageName:latest

#         - name: Docker Login
#           run: docker login --username=dockerUsername --password=s3cUrePaSsw0rd

#         - name: Docker Publish
#           run: docker push docker.io/dockerUsername/imageName:latest

#     deploy:
#         needs: docker
#         runs-on: ubuntu-latest
#         steps: 
#         - name: Docker Run
#           run: docker run -d -p 8080:80 docker.io/dockerUsername/imageName:latest

# using environment variable at STEPS LEVEL
# name: Exploring Variable and Secrets

# on: push

# jobs: 
#     docker:
#         runs-on: ubuntu-latest
#         steps:
#         - name: Docker Build
#           env: 
#             CONTAINER_REGISTRY: docker.io
#             DOCKER_USERNAME: siddharth1
#             IMAGE_NAME: github-actions-nginx
#           run: docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

#         - name: Docker Login
#           env:
#             DOCKER_USERNAME: dockerUsername
#             DOCKER_PASSWORD: s3cUrePaSsw0rd
#           run: docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

#         - name: Docker Publish
#           env:
#             CONTAINER_REGISTRY: docker.io
#             DOCKER_USERNAME: siddharth1
#             IMAGE_NAME: github-actions-nginx
#           run: docker push ${{ env.CONTAINER_REGISTRY }}/$DOCKER_USERNAME/$IMAGE_NAME:latest

#     deploy:
#         needs: docker
#         runs-on: ubuntu-latest
#         steps: 
#         - name: Docker Run
#           env:
#               CONTAINER_REGISTRY: docker.io
#               DOCKER_USERNAME: siddharth1
#               IMAGE_NAME: github-actions-nginx
#           run: docker run -d -p 8080:80 ${{ env.CONTAINER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

# using environment variable at JOB LEVEL
# name: Exploring Variable and Secrets

# on: push

# jobs: 
#     docker:
#         env: 
#             CONTAINER_REGISTRY: docker.io
#             DOCKER_USERNAME: siddharth1
#             IMAGE_NAME: github-actions-nginx
#             DOCKER_PASSWORD: s3cUrePaSsw0rd
#         runs-on: ubuntu-latest
#         steps:
#         - name: Docker Build
#           run: docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

#         - name: Docker Login
#           run: docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

#         - name: Docker Publish
#           run: docker push ${{ env.CONTAINER_REGISTRY }}/$DOCKER_USERNAME/$IMAGE_NAME:latest

#     deploy:
#         env:
#             CONTAINER_REGISTRY: docker.io
#             DOCKER_USERNAME: siddharth1
#             IMAGE_NAME: github-actions-nginx
#         needs: docker
#         runs-on: ubuntu-latest
#         steps: 
#         - name: Docker Run
#           run: docker run -d -p 8080:80 ${{ env.CONTAINER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

# using environment variable at WORKFLOW LEVEL
name: Exploring Variable and Secrets

on: push

env: 
    CONTAINER_REGISTRY: docker.io
    DOCKER_USERNAME: siddharth1
    IMAGE_NAME: github-actions-nginx
    # DOCKER_PASSWORD: s3cUrePaSsw0rd

jobs: 
    docker:

        runs-on: ubuntu-latest
        steps:
        - name: Docker Build
          run: echo docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

        - name: Docker Login
        #   run: echo docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD
        # using secrets
          run: echo docker login --username=$DOCKER_USERNAME --password=${{ secrets.DOCKER_PASSWORD }}

        - name: Docker Publish
          run: echo docker push ${{ env.CONTAINER_REGISTRY }}/$DOCKER_USERNAME/$IMAGE_NAME:latest

    deploy:
        needs: docker
        runs-on: ubuntu-latest
        steps: 
        - name: Docker Run
          run: echo docker run -d -p 8080:80 ${{ env.CONTAINER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest